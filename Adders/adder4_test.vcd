$date
	Sun Mar 23 16:20:01 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module adder4_test $end
$var wire 4 ! S [3:0] $end
$var wire 1 " Cout $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % Cin $end
$scope module DUT $end
$var wire 4 & A [3:0] $end
$var wire 4 ' B [3:0] $end
$var wire 1 % Cin $end
$var wire 1 " Cout $end
$var wire 1 ( c1 $end
$var wire 1 ) c2 $end
$var wire 1 * c3 $end
$var wire 1 + g0 $end
$var wire 1 , g1 $end
$var wire 1 - g2 $end
$var wire 1 . g3 $end
$var wire 1 / p0 $end
$var wire 1 0 p1 $end
$var wire 1 1 p2 $end
$var wire 1 2 p3 $end
$var wire 4 3 S [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx 3
x2
x1
x0
x/
x.
x-
x,
x+
x*
x)
x(
bx '
bx &
x%
bx $
bx #
x"
bx !
$end
#5
1"
1*
0(
1)
b1 !
b1 3
0/
00
11
12
0+
1,
0-
0.
1%
b110 $
b110 '
b1010 #
b1010 &
#10
1(
b110 !
b110 3
1/
01
1-
b1111 #
b1111 &
#15
0(
b101 !
b101 3
0%
